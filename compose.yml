version: '3.7'

networks:
  kafka-net:
    driver: bridge

volumes:
  postgres-data:
  airflow-logs:
  airflow-dags:
  airflow-plugins:

services:
  postgres:
    container_name: container-pg
    image: postgres
    hostname: localhost
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: kafka-weather
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - kafka-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    networks:
      - kafka-net

  kafka0: &kafka
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka0
    container_name: kafka0
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_BOB://kafka0:29092,LISTENER_FRED://kafka0:9092,LISTENER_ALICE://kafka0:29094
      KAFKA_ADVERTISED_LISTENERS: LISTENER_BOB://kafka0:29092,LISTENER_FRED://localhost:9092,LISTENER_ALICE://never-gonna-give-you-up:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT,LISTENER_ALICE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_BOB
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  init-kafka:
    image: confluentinc/cp-kafka:7.3.2
    entrypoint: [ '/bin/sh', '-c' ]
    container_name: init-kafka
    depends_on:
      - kafka0
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka0:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka0:29092 --create --if-not-exists --topic current-weather --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka0:29092 --list
      "
    networks:
      - kafka-net

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
        - kafka-net

  x-airflow-base: &airflow-common
    container_name: airflow-base
    build: ./airflow/workers
    user: "1000:0"
    environment:
      - LOAD_EX=n
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=airflow
      - _AIRFLOW_WWW_USER_PASSWORD=airflow
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://admin:root@postgres/kafka_weather
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://admin:root@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW_HOME=/opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/workers/beam:/opt/airflow/workers/beam
    networks:
      - kafka-net

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    depends_on:
      - postgres
      - redis
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - kafka-net

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    depends_on:
      - postgres
      - redis
    command: scheduler
    networks:
      - kafka-net

  airflow-worker:
    <<: *airflow-common
    container_name: airflow-worker
    depends_on:
      - postgres
      - redis
    command: celery worker
    networks:
      - kafka-net